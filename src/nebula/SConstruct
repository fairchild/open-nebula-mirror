# SConstruct for src/nebula

Import('env')

lib_name='nebula_core'

# Sources to generate the library
source_files=[
	'Nebula.cc',
	'NebulaTemplate.cc',
	'Log.cc'
]

# Build library
env.StaticLibrary(lib_name, source_files)

# Build daemon

env.Append(LIBS=[
	'nebula_core',
	'nebula_vmm',
	'nebula_lcm',
	'nebula_vm',
	'nebula_im',
	'nebula_rm',
	'nebula_dm',	
	'nebula_tm',		
	'nebula_mad',
	'nebula_template',
	'nebula_pool',
	'nebula_host',
	'nebula_common',
	'sqlite3',
    'wwwxml',
    'xmltok',
    'xmlparse',
    'wwwzip',
    'wwwinit',
    'wwwapp',
    'wwwtelnet',
    'wwwhtml',
    'wwwnews',
    'wwwhttp',
    'wwwmime',
    'wwwgopher',
    'wwwftp',
    'wwwfile',
    'wwwdir',
    'wwwcache',
    'wwwstream',
    'wwwmux',
    'wwwtrans',
    'wwwcore',
    'wwwutils',
    'md5',
    'dl',
    'z',
    'pthread',
    'xmlrpc_client++',
    'xmlrpc_client',
    'xmlrpc++',
    'xmlrpc',
    'xmlrpc_util',
    'xmlrpc_xmlparse',
    'xmlrpc_xmltok',
    'xmlrpc_server_abyss++',
    'xmlrpc_server++',
    'xmlrpc_server_abyss',
    'xmlrpc_server',
    'xmlrpc_abyss',	
])

env.Program('oned.cc')